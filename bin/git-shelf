#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path("../../lib", __FILE__)

require "thor"
require 'yaml'
require 'awesome_print'

require 'git_shelf'

class MyCLI < Thor
  desc "get CATEGORY URL", "Get a repository from URL and put it into CATEGORY directory."
  option :shelf, type: :string

  def get(category, url)
    config = load_config
    shelf = File.expand_path(options[:shelf] || config[:shelf])
    repository = GitShelf::Repository.from_url(shelf, url, category, Time.now)

    begin
      repository.shallowClone
    rescue StandardError => ex
      puts ex
    end
  end

  desc "dump", "Dump repositories directory tree as a yaml."
  option :shelf, type: :string
  option :repository_book, type: :string

  def dump
    config = load_config
    shelf = File.expand_path(options[:shelf] || config[:shelf])
    repository_book = File.expand_path(options[:repository_book] || config[:repository_book])

    repositories = GitShelf::Repositories.from_root_path(shelf)
    data = {
        repositories: repositories.to_a
    }
    YAML.dump(data, File.open(repository_book, 'w'))
  end

  desc "count CATEGORY", "Count CATEGORY of repositories from cached yml."
  option :repository_book, type: :string

  def count(category)
    config = load_config
    repository_book_path = File.expand_path(options[:repository_book] || config[:repository_book])
    repository_book = YAML.load_file(repository_book_path)

    repositories = GitShelf::Repositories.from_array(config[:shelf], repository_book[:repositories])
    puts repositories.count(category).to_table
  end

  private
  def load_config
    config = File.expand_path('~/.ruby-git-shelf')
    YAML.load_file(config)
  end
end

MyCLI.start(ARGV)
